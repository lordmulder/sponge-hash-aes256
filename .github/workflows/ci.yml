name: Rust CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  check:
    runs-on: ubuntu-latest
    container:
      image: rust:${{ matrix.rust }}
    strategy:
      matrix:
        rust: [1.90-trixie, 1.85-bookworm]
        project: [lib, app]
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name && format('refs/tags/{0}', github.event.release.tag_name) || github.sha }}
      - working-directory: ${{ github.workspace }}/${{ matrix.project }}
        run: cargo check --verbose

  format:
    runs-on: ubuntu-latest
    container:
      image: rust:${{ matrix.rust }}
    needs: check
    strategy:
      matrix:
        rust: [1.90-trixie, 1.85-bookworm]
        project: [lib, app]
    steps:
      - run: rustup component add rustfmt
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name && format('refs/tags/{0}', github.event.release.tag_name) || github.sha }}
      - working-directory: ${{ github.workspace }}/${{ matrix.project }}
        run: cargo fmt --all --check

  clippy:
    runs-on: ubuntu-latest
    container:
      image: rust:${{ matrix.rust }}
    needs: check
    strategy:
      matrix:
        rust: [1.90-trixie, 1.85-bookworm]
        project: [lib, app]
    steps:
      - run: rustup component add clippy
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name && format('refs/tags/{0}', github.event.release.tag_name) || github.sha }}
      - working-directory: ${{ github.workspace }}/${{ matrix.project }}
        run: cargo clippy -- -D warnings${{ matrix.rust == '1.85-bookworm' && ' -A unknown_lints' || '' }}

  test:
    runs-on: ubuntu-latest
    container:
      image: rust:${{ matrix.rust }}
    needs: [format, clippy]
    strategy:
      matrix:
        rust: [1.90-trixie, 1.85-bookworm]
        project: [lib, app]
        options: ["", " --release --features aligned", " --examples"]
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name && format('refs/tags/{0}', github.event.release.tag_name) || github.sha }}
      - working-directory: ${{ github.workspace }}/${{ matrix.project }}
        run: cargo test --verbose${{ matrix.options }}${{ github.event_name == 'release' && ' -- --include-ignored' || '' }}

  build-linux:
    runs-on: ubuntu-latest
    container:
      image: rust:1.90-trixie
    needs: test
    steps:
      - run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y musl-tools crossbuild-essential-i386 crossbuild-essential-arm64
      - run: |
          rustup target add x86_64-unknown-linux-musl
          rustup target add i586-unknown-linux-musl
          rustup target add i686-unknown-linux-musl
          rustup target add aarch64-unknown-linux-musl
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name && format('refs/tags/{0}', github.event.release.tag_name) || github.sha }}
      - run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - working-directory: ${{ github.workspace }}/.build/linux
        run: make
      - uses: actions/upload-artifact@v4
        with:
          name: sponge256sum-linux
          path: ${{ github.workspace }}/.build/linux/target/*.tar.xz

  build-windows:
    runs-on: windows-latest
    needs: test
    steps:
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: x86_64-pc-windows-msvc,i686-pc-windows-msvc,aarch64-pc-windows-msvc
          rustflags: "-Dwarnings -Ctarget-feature=+crt-static"
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name && format('refs/tags/{0}', github.event.release.tag_name) || github.sha }}
      - run: git config --global --add safe.directory $env:GITHUB_WORKSPACE
      - working-directory: ${{ github.workspace }}/.build/windows
        run: cmd.exe /c make.cmd
      - uses: actions/upload-artifact@v4
        with:
          name: sponge256sum-windows
          path: ${{ github.workspace }}/.build/windows/target/*.*

  build-macos:
    runs-on: macos-latest
    needs: test
    steps:
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: x86_64-apple-darwin,aarch64-apple-darwin
          rustflags: "-Dwarnings -Ctarget-feature=+crt-static -Clink-arg=-O3"
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name && format('refs/tags/{0}', github.event.release.tag_name) || github.sha }}
      - run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - working-directory: ${{ github.workspace }}/.build/macos
        run: make
      - uses: actions/upload-artifact@v4
        with:
          name: sponge256sum-macos
          path: ${{ github.workspace }}/.build/macos/target/*.dmg

  build-cross-freebsd:
    runs-on: ubuntu-latest
    container:
      image: rust:1.90-trixie
    needs: test
    steps:
      - run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y clang lld
      - run: |
          rustup target add x86_64-unknown-freebsd
          rustup target add i686-unknown-freebsd
      - uses: actions/cache@v4
        id: cache-freebsd-sysroots
        with:
          path: /opt/freebsd/sysroot
          key: freebsd-sysroot-14.3-RELEASE
      - if: steps.cache-freebsd-sysroots.outputs.cache-hit != 'true'
        run: |
          for p in amd64 i386; do
            mkdir -p /opt/freebsd/sysroot/${p}
            wget -qO - https://download.freebsd.org/ftp/releases/${p}/14.3-RELEASE/base.txz | tar -C /opt/freebsd/sysroot/${p} -xJv
          done
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name && format('refs/tags/{0}', github.event.release.tag_name) || github.sha }}
      - run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - working-directory: ${{ github.workspace }}/.build/unix
        run: ./crossbuild-freebsd.sh
      - uses: actions/upload-artifact@v4
        with:
          name: sponge256sum-freebsd
          path: ${{ github.workspace }}/.build/unix/target/*.tar.xz

  build-cross-netbsd:
    runs-on: ubuntu-latest
    container:
      image: rust:1.90-trixie
    needs: test
    steps:
      - run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y clang lld
      - run: |
          rustup target add x86_64-unknown-netbsd
      - uses: actions/cache@v4
        id: cache-netbsd-sysroots
        with:
          path: /opt/netbsd/sysroot
          key: netbsd-sysroot-10.1
      - if: steps.cache-netbsd-sysroots.outputs.cache-hit != 'true'
        run: |
          mkdir -p /opt/netbsd/sysroot/amd64
          for s in base comp; do
            wget -qO - https://cdn.netbsd.org/pub/NetBSD/NetBSD-10.1/amd64/binary/sets/${s}.tar.xz | tar -C /opt/netbsd/sysroot/amd64 -xJv
          done
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name && format('refs/tags/{0}', github.event.release.tag_name) || github.sha }}
      - run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - working-directory: ${{ github.workspace }}/.build/unix
        run: ./crossbuild-netbsd.sh
      - uses: actions/upload-artifact@v4
        with:
          name: sponge256sum-netbsd
          path: ${{ github.workspace }}/.build/unix/target/*.tar.xz

  release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' }}
    needs: [build-linux, build-windows, build-macos, build-cross-freebsd, build-cross-netbsd]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: sponge256sum-*
          path: artifacts
          merge-multiple: true
      - uses: Roang-zero1/github-upload-release-artifacts-action@v2
        with:
          args: artifacts/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
